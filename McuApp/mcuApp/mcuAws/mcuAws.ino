#include <ESP8266WiFi.h>
#include <PubSubClient.h> //https://pubsubclient.knolleary.net/

unsigned char ca_der[] = {
  0x30, 0x82, 0x03, 0x41, 0x30, 0x82, 0x02, 0x29, 0xa0, 0x03, 0x02, 0x01,
  0x02, 0x02, 0x13, 0x06, 0x6c, 0x9f, 0xcf, 0x99, 0xbf, 0x8c, 0x0a, 0x39,
  0xe2, 0xf0, 0x78, 0x8a, 0x43, 0xe6, 0x96, 0x36, 0x5b, 0xca, 0x30, 0x0d,
  0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b, 0x05,
  0x00, 0x30, 0x39, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06,
  0x13, 0x02, 0x55, 0x53, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04,
  0x0a, 0x13, 0x06, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x31, 0x19, 0x30,
  0x17, 0x06, 0x03, 0x55, 0x04, 0x03, 0x13, 0x10, 0x41, 0x6d, 0x61, 0x7a,
  0x6f, 0x6e, 0x20, 0x52, 0x6f, 0x6f, 0x74, 0x20, 0x43, 0x41, 0x20, 0x31,
  0x30, 0x1e, 0x17, 0x0d, 0x31, 0x35, 0x30, 0x35, 0x32, 0x36, 0x30, 0x30,
  0x30, 0x30, 0x30, 0x30, 0x5a, 0x17, 0x0d, 0x33, 0x38, 0x30, 0x31, 0x31,
  0x37, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x5a, 0x30, 0x39, 0x31, 0x0b,
  0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x55, 0x53, 0x31,
  0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x13, 0x06, 0x41, 0x6d,
  0x61, 0x7a, 0x6f, 0x6e, 0x31, 0x19, 0x30, 0x17, 0x06, 0x03, 0x55, 0x04,
  0x03, 0x13, 0x10, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x20, 0x52, 0x6f,
  0x6f, 0x74, 0x20, 0x43, 0x41, 0x20, 0x31, 0x30, 0x82, 0x01, 0x22, 0x30,
  0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01,
  0x05, 0x00, 0x03, 0x82, 0x01, 0x0f, 0x00, 0x30, 0x82, 0x01, 0x0a, 0x02,
  0x82, 0x01, 0x01, 0x00, 0xb2, 0x78, 0x80, 0x71, 0xca, 0x78, 0xd5, 0xe3,
  0x71, 0xaf, 0x47, 0x80, 0x50, 0x74, 0x7d, 0x6e, 0xd8, 0xd7, 0x88, 0x76,
  0xf4, 0x99, 0x68, 0xf7, 0x58, 0x21, 0x60, 0xf9, 0x74, 0x84, 0x01, 0x2f,
  0xac, 0x02, 0x2d, 0x86, 0xd3, 0xa0, 0x43, 0x7a, 0x4e, 0xb2, 0xa4, 0xd0,
  0x36, 0xba, 0x01, 0xbe, 0x8d, 0xdb, 0x48, 0xc8, 0x07, 0x17, 0x36, 0x4c,
  0xf4, 0xee, 0x88, 0x23, 0xc7, 0x3e, 0xeb, 0x37, 0xf5, 0xb5, 0x19, 0xf8,
  0x49, 0x68, 0xb0, 0xde, 0xd7, 0xb9, 0x76, 0x38, 0x1d, 0x61, 0x9e, 0xa4,
  0xfe, 0x82, 0x36, 0xa5, 0xe5, 0x4a, 0x56, 0xe4, 0x45, 0xe1, 0xf9, 0xfd,
  0xb4, 0x16, 0xfa, 0x74, 0xda, 0x9c, 0x9b, 0x35, 0x39, 0x2f, 0xfa, 0xb0,
  0x20, 0x50, 0x06, 0x6c, 0x7a, 0xd0, 0x80, 0xb2, 0xa6, 0xf9, 0xaf, 0xec,
  0x47, 0x19, 0x8f, 0x50, 0x38, 0x07, 0xdc, 0xa2, 0x87, 0x39, 0x58, 0xf8,
  0xba, 0xd5, 0xa9, 0xf9, 0x48, 0x67, 0x30, 0x96, 0xee, 0x94, 0x78, 0x5e,
  0x6f, 0x89, 0xa3, 0x51, 0xc0, 0x30, 0x86, 0x66, 0xa1, 0x45, 0x66, 0xba,
  0x54, 0xeb, 0xa3, 0xc3, 0x91, 0xf9, 0x48, 0xdc, 0xff, 0xd1, 0xe8, 0x30,
  0x2d, 0x7d, 0x2d, 0x74, 0x70, 0x35, 0xd7, 0x88, 0x24, 0xf7, 0x9e, 0xc4,
  0x59, 0x6e, 0xbb, 0x73, 0x87, 0x17, 0xf2, 0x32, 0x46, 0x28, 0xb8, 0x43,
  0xfa, 0xb7, 0x1d, 0xaa, 0xca, 0xb4, 0xf2, 0x9f, 0x24, 0x0e, 0x2d, 0x4b,
  0xf7, 0x71, 0x5c, 0x5e, 0x69, 0xff, 0xea, 0x95, 0x02, 0xcb, 0x38, 0x8a,
  0xae, 0x50, 0x38, 0x6f, 0xdb, 0xfb, 0x2d, 0x62, 0x1b, 0xc5, 0xc7, 0x1e,
  0x54, 0xe1, 0x77, 0xe0, 0x67, 0xc8, 0x0f, 0x9c, 0x87, 0x23, 0xd6, 0x3f,
  0x40, 0x20, 0x7f, 0x20, 0x80, 0xc4, 0x80, 0x4c, 0x3e, 0x3b, 0x24, 0x26,
  0x8e, 0x04, 0xae, 0x6c, 0x9a, 0xc8, 0xaa, 0x0d, 0x02, 0x03, 0x01, 0x00,
  0x01, 0xa3, 0x42, 0x30, 0x40, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x1d, 0x13,
  0x01, 0x01, 0xff, 0x04, 0x05, 0x30, 0x03, 0x01, 0x01, 0xff, 0x30, 0x0e,
  0x06, 0x03, 0x55, 0x1d, 0x0f, 0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02,
  0x01, 0x86, 0x30, 0x1d, 0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04,
  0x14, 0x84, 0x18, 0xcc, 0x85, 0x34, 0xec, 0xbc, 0x0c, 0x94, 0x94, 0x2e,
  0x08, 0x59, 0x9c, 0xc7, 0xb2, 0x10, 0x4e, 0x0a, 0x08, 0x30, 0x0d, 0x06,
  0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b, 0x05, 0x00,
  0x03, 0x82, 0x01, 0x01, 0x00, 0x98, 0xf2, 0x37, 0x5a, 0x41, 0x90, 0xa1,
  0x1a, 0xc5, 0x76, 0x51, 0x28, 0x20, 0x36, 0x23, 0x0e, 0xae, 0xe6, 0x28,
  0xbb, 0xaa, 0xf8, 0x94, 0xae, 0x48, 0xa4, 0x30, 0x7f, 0x1b, 0xfc, 0x24,
  0x8d, 0x4b, 0xb4, 0xc8, 0xa1, 0x97, 0xf6, 0xb6, 0xf1, 0x7a, 0x70, 0xc8,
  0x53, 0x93, 0xcc, 0x08, 0x28, 0xe3, 0x98, 0x25, 0xcf, 0x23, 0xa4, 0xf9,
  0xde, 0x21, 0xd3, 0x7c, 0x85, 0x09, 0xad, 0x4e, 0x9a, 0x75, 0x3a, 0xc2,
  0x0b, 0x6a, 0x89, 0x78, 0x76, 0x44, 0x47, 0x18, 0x65, 0x6c, 0x8d, 0x41,
  0x8e, 0x3b, 0x7f, 0x9a, 0xcb, 0xf4, 0xb5, 0xa7, 0x50, 0xd7, 0x05, 0x2c,
  0x37, 0xe8, 0x03, 0x4b, 0xad, 0xe9, 0x61, 0xa0, 0x02, 0x6e, 0xf5, 0xf2,
  0xf0, 0xc5, 0xb2, 0xed, 0x5b, 0xb7, 0xdc, 0xfa, 0x94, 0x5c, 0x77, 0x9e,
  0x13, 0xa5, 0x7f, 0x52, 0xad, 0x95, 0xf2, 0xf8, 0x93, 0x3b, 0xde, 0x8b,
  0x5c, 0x5b, 0xca, 0x5a, 0x52, 0x5b, 0x60, 0xaf, 0x14, 0xf7, 0x4b, 0xef,
  0xa3, 0xfb, 0x9f, 0x40, 0x95, 0x6d, 0x31, 0x54, 0xfc, 0x42, 0xd3, 0xc7,
  0x46, 0x1f, 0x23, 0xad, 0xd9, 0x0f, 0x48, 0x70, 0x9a, 0xd9, 0x75, 0x78,
  0x71, 0xd1, 0x72, 0x43, 0x34, 0x75, 0x6e, 0x57, 0x59, 0xc2, 0x02, 0x5c,
  0x26, 0x60, 0x29, 0xcf, 0x23, 0x19, 0x16, 0x8e, 0x88, 0x43, 0xa5, 0xd4,
  0xe4, 0xcb, 0x08, 0xfb, 0x23, 0x11, 0x43, 0xe8, 0x43, 0x29, 0x72, 0x62,
  0xa1, 0xa9, 0x5d, 0x5e, 0x08, 0xd4, 0x90, 0xae, 0xb8, 0xd8, 0xce, 0x14,
  0xc2, 0xd0, 0x55, 0xf2, 0x86, 0xf6, 0xc4, 0x93, 0x43, 0x77, 0x66, 0x61,
  0xc0, 0xb9, 0xe8, 0x41, 0xd7, 0x97, 0x78, 0x60, 0x03, 0x6e, 0x4a, 0x72,
  0xae, 0xa5, 0xd1, 0x7d, 0xba, 0x10, 0x9e, 0x86, 0x6c, 0x1b, 0x8a, 0xb9,
  0x59, 0x33, 0xf8, 0xeb, 0xc4, 0x90, 0xbe, 0xf1, 0xb9
};
unsigned int ca_der_len = 837;

unsigned char private_der[] = {
  0x30, 0x82, 0x04, 0xa0, 0x02, 0x01, 0x00, 0x02, 0x82, 0x01, 0x01, 0x00,
  0xd9, 0x3c, 0x37, 0xbd, 0xc7, 0xba, 0xf5, 0x28, 0xc5, 0xac, 0x65, 0xc6,
  0x89, 0xba, 0x10, 0x0b, 0xa0, 0x04, 0xd1, 0x96, 0x7c, 0xc6, 0x56, 0xa2,
  0x61, 0xa6, 0xe5, 0xe3, 0x24, 0x3c, 0x2f, 0xa3, 0xf6, 0xc3, 0xca, 0xb2,
  0xfe, 0x1c, 0x98, 0xdc, 0xa8, 0x6d, 0x9d, 0x8e, 0x27, 0x19, 0xe5, 0x5a,
  0x95, 0xe2, 0x78, 0xa5, 0x42, 0xc5, 0xa6, 0x2d, 0x17, 0x56, 0x4a, 0xa6,
  0x75, 0x9f, 0xdf, 0x84, 0xb2, 0x8c, 0x72, 0x0c, 0x17, 0x49, 0x57, 0x6a,
  0x23, 0xa1, 0x2c, 0x8a, 0xde, 0xf0, 0xac, 0x51, 0xaf, 0xaa, 0x0f, 0x73,
  0xf5, 0x63, 0x78, 0x5f, 0x12, 0x6e, 0xbd, 0x40, 0x55, 0x71, 0x04, 0x43,
  0x3b, 0x73, 0xa1, 0xe0, 0x6e, 0x1f, 0x78, 0x5b, 0xc5, 0xa2, 0x12, 0xc6,
  0x2b, 0xd3, 0x0d, 0xad, 0x8c, 0x11, 0x5d, 0x3d, 0x1b, 0xd7, 0xc6, 0xe2,
  0x05, 0x2e, 0x1c, 0x9f, 0xf1, 0xb4, 0x4e, 0x54, 0xf2, 0xe8, 0xac, 0xc4,
  0x4e, 0xfa, 0xc3, 0x07, 0x9a, 0x4c, 0x38, 0xfd, 0xfe, 0xc2, 0xef, 0xab,
  0x10, 0xd0, 0x59, 0x68, 0x36, 0x15, 0x1e, 0x1e, 0x0d, 0xac, 0xe3, 0x6a,
  0x8a, 0x30, 0xaa, 0x5e, 0x10, 0xe8, 0xc5, 0xeb, 0xa9, 0x75, 0x7f, 0xca,
  0x31, 0x6b, 0xfc, 0xd9, 0x52, 0xa2, 0x40, 0x37, 0x0a, 0xa5, 0x8a, 0xc2,
  0x35, 0x0d, 0x60, 0x43, 0x44, 0xe6, 0x25, 0x9e, 0xa6, 0x77, 0xbe, 0x53,
  0x52, 0x03, 0x97, 0x1f, 0xb2, 0x85, 0xbc, 0x48, 0x1b, 0x55, 0x70, 0x47,
  0xbd, 0x61, 0xe2, 0xb5, 0x20, 0xb2, 0xe2, 0xe2, 0x2d, 0xb6, 0xf1, 0x8d,
  0xb3, 0xab, 0x9c, 0xd9, 0xd2, 0x8c, 0x6e, 0x2d, 0x14, 0x10, 0x62, 0x4d,
  0xec, 0x2a, 0x6f, 0xa8, 0x11, 0x02, 0xc4, 0xf2, 0x42, 0xdb, 0xca, 0x45,
  0x85, 0xac, 0x4a, 0xa6, 0xba, 0x4d, 0x50, 0x6d, 0xe9, 0x34, 0x4b, 0x60,
  0x38, 0x6f, 0x31, 0x83, 0x02, 0x03, 0x01, 0x00, 0x01, 0x02, 0x81, 0xff,
  0x22, 0xca, 0x82, 0x22, 0xe2, 0xda, 0x0e, 0x69, 0x79, 0x3f, 0x23, 0x0d,
  0xa9, 0x01, 0x23, 0x90, 0xb9, 0x10, 0x0c, 0x81, 0x0d, 0x7a, 0xb6, 0x65,
  0x4b, 0x3e, 0x6f, 0x92, 0xf1, 0x3a, 0xb2, 0x66, 0x90, 0x1e, 0xcb, 0x57,
  0xdf, 0x5a, 0xb5, 0x20, 0xa1, 0xd8, 0xec, 0x62, 0xd7, 0xe0, 0x4d, 0xdb,
  0x34, 0x26, 0x11, 0x2c, 0x66, 0x85, 0x41, 0x17, 0xf7, 0xa4, 0xda, 0x4f,
  0xce, 0x86, 0xcc, 0x45, 0x74, 0x53, 0x09, 0xf0, 0xe5, 0xc9, 0xd9, 0x36,
  0x26, 0x7e, 0xa9, 0xa3, 0x94, 0x10, 0xf7, 0x88, 0x1d, 0x9a, 0x1e, 0xdf,
  0x73, 0x6d, 0x7a, 0xd9, 0xbf, 0x19, 0xfd, 0x35, 0x50, 0x79, 0xc9, 0x34,
  0xfb, 0x50, 0x89, 0x9c, 0x68, 0x06, 0xa2, 0x40, 0x10, 0x66, 0xe4, 0x9a,
  0xd8, 0x69, 0xf4, 0xc6, 0xd6, 0xa7, 0xf1, 0x46, 0xd8, 0x2e, 0xb6, 0xab,
  0x7c, 0x28, 0xe6, 0x6c, 0xb7, 0x49, 0x29, 0x42, 0x25, 0xf3, 0xb4, 0x78,
  0x6a, 0xc7, 0x08, 0x8a, 0x4a, 0xff, 0x67, 0xbe, 0x55, 0x0c, 0x25, 0x3d,
  0x81, 0x30, 0x6e, 0xcb, 0x5e, 0x30, 0x02, 0xb4, 0xae, 0x4e, 0xcc, 0x1e,
  0x17, 0x0b, 0xa9, 0xc7, 0x86, 0xcf, 0xab, 0x65, 0x0d, 0xe3, 0x3e, 0x38,
  0x36, 0xb2, 0x7e, 0x62, 0x5e, 0x88, 0x6a, 0xd5, 0xcd, 0xe7, 0x2a, 0x94,
  0x92, 0x8e, 0xd4, 0x49, 0x0d, 0xd8, 0x11, 0xc5, 0xd1, 0x09, 0x32, 0x09,
  0xc0, 0x5a, 0x2c, 0x35, 0xef, 0xca, 0x45, 0xca, 0x6c, 0xb2, 0x9c, 0xa5,
  0xf0, 0x4b, 0xbc, 0x8f, 0x91, 0xf6, 0x6a, 0x5b, 0x28, 0xd0, 0xd8, 0xe7,
  0x23, 0xc4, 0x6d, 0xcc, 0x27, 0xd4, 0x16, 0x65, 0x0b, 0x12, 0xd2, 0x8a,
  0x1e, 0xf2, 0xaf, 0x86, 0xd6, 0x09, 0x6a, 0x76, 0xd3, 0x25, 0x3c, 0x7f,
  0xa7, 0x8e, 0x35, 0xd1, 0x57, 0x0e, 0x92, 0x45, 0xf9, 0xdc, 0x67, 0x2e,
  0xd0, 0x60, 0x01, 0x02, 0x81, 0x81, 0x00, 0xfb, 0x7b, 0x01, 0xb2, 0xad,
  0xab, 0x60, 0xcb, 0xec, 0x56, 0xda, 0x2d, 0x89, 0x2c, 0xb2, 0x60, 0x59,
  0x00, 0xfa, 0xc5, 0x24, 0x17, 0x09, 0xba, 0x8a, 0x10, 0xf6, 0xf0, 0x8b,
  0x02, 0x70, 0x4f, 0x30, 0x33, 0x29, 0x14, 0xb9, 0x49, 0x54, 0x33, 0x1f,
  0x62, 0xa8, 0xa7, 0xeb, 0xeb, 0x0e, 0xb1, 0xa2, 0x8a, 0x9e, 0x31, 0x98,
  0x47, 0x71, 0x5b, 0xb4, 0xc8, 0x43, 0x84, 0x1d, 0x0d, 0x40, 0xd8, 0x84,
  0x3a, 0x9f, 0x1a, 0x16, 0xef, 0x3f, 0xb1, 0xcf, 0xcb, 0x0d, 0xb8, 0x8a,
  0xfd, 0xec, 0xe0, 0x2e, 0xf9, 0xdc, 0x19, 0xaf, 0x22, 0xdb, 0xde, 0x48,
  0xcd, 0x9c, 0x92, 0x3e, 0xc6, 0x05, 0x66, 0x29, 0x8f, 0x6a, 0xe9, 0xed,
  0xf2, 0xb4, 0xa3, 0x5e, 0x02, 0xd1, 0xa8, 0x8c, 0xf9, 0x59, 0x03, 0x4c,
  0x01, 0x77, 0x76, 0xdc, 0x3d, 0xe0, 0x1e, 0x7d, 0x64, 0x9b, 0x4e, 0x71,
  0xe7, 0xa1, 0x83, 0x02, 0x81, 0x81, 0x00, 0xdd, 0x23, 0xa8, 0x6e, 0x86,
  0xc9, 0x72, 0xfb, 0x33, 0xf7, 0x41, 0x36, 0x00, 0x42, 0x16, 0x08, 0x38,
  0x40, 0x26, 0x8b, 0x56, 0xc9, 0xc3, 0xe2, 0x51, 0x92, 0xb1, 0xa0, 0x29,
  0xde, 0x98, 0xcf, 0x40, 0xec, 0x95, 0x4f, 0x4c, 0x11, 0x56, 0xa0, 0xb4,
  0xe5, 0xb1, 0x57, 0xb8, 0x67, 0x5a, 0xee, 0x2b, 0x4d, 0x0f, 0x02, 0xa2,
  0x27, 0x53, 0xc9, 0x12, 0x6e, 0x48, 0x66, 0x2c, 0xf3, 0xc7, 0xf1, 0xc5,
  0x1a, 0x9d, 0x17, 0xa8, 0x12, 0x0e, 0xd0, 0x61, 0x77, 0x6c, 0xe3, 0x2c,
  0x7e, 0xf6, 0xba, 0x0d, 0xac, 0xa0, 0xe4, 0x1f, 0xd8, 0xb9, 0xc8, 0x79,
  0x6a, 0x0f, 0x7c, 0x1f, 0x79, 0xf6, 0xfe, 0x4b, 0x7b, 0x8f, 0xa9, 0x07,
  0xa9, 0x54, 0x26, 0xe7, 0xad, 0x34, 0xd7, 0xd1, 0x4c, 0x35, 0x0a, 0xb6,
  0x35, 0x09, 0x0d, 0x36, 0x41, 0xf1, 0x5e, 0xbc, 0x24, 0xbc, 0x48, 0x9d,
  0x95, 0x30, 0x01, 0x02, 0x81, 0x80, 0x17, 0x0a, 0xe5, 0x53, 0xee, 0xef,
  0xd6, 0x15, 0xb9, 0x59, 0x17, 0xf2, 0xb6, 0x2f, 0xff, 0x44, 0x2e, 0xc3,
  0x95, 0x36, 0xbd, 0x20, 0xd3, 0x46, 0x61, 0x62, 0x3e, 0x8e, 0x39, 0xde,
  0x86, 0x55, 0xeb, 0x2f, 0xb4, 0xe2, 0xee, 0x3b, 0x56, 0xd8, 0xbc, 0x56,
  0x78, 0xe7, 0xb2, 0x09, 0x3e, 0xb6, 0x6e, 0x13, 0x4f, 0x7d, 0x71, 0xdb,
  0x91, 0xfa, 0x7a, 0x2d, 0x23, 0x6a, 0x96, 0x92, 0xe1, 0x4f, 0x35, 0x86,
  0x7d, 0x8f, 0x91, 0x6c, 0x68, 0xa4, 0xad, 0x4a, 0x88, 0xbe, 0x51, 0x16,
  0x05, 0x3f, 0x61, 0x6e, 0x89, 0x89, 0x5c, 0xef, 0xcf, 0xbf, 0xa5, 0x62,
  0x19, 0xa7, 0x98, 0xd2, 0xe2, 0x29, 0xc3, 0x43, 0x1d, 0xe3, 0xc3, 0x66,
  0xca, 0xc0, 0x71, 0x5b, 0xc6, 0xc4, 0x2f, 0xee, 0xa5, 0x06, 0x55, 0x4f,
  0x89, 0x17, 0xbe, 0x04, 0x79, 0x65, 0xb1, 0xcd, 0xa7, 0x21, 0x5f, 0xf4,
  0x7e, 0x6b, 0x02, 0x81, 0x80, 0x1e, 0x4e, 0xc2, 0xc8, 0xd3, 0x24, 0x4c,
  0xe3, 0xec, 0xcd, 0x58, 0x5c, 0xa4, 0x50, 0x6a, 0x60, 0x9a, 0x05, 0x00,
  0xc3, 0x5c, 0x13, 0xaf, 0x0b, 0x17, 0x8e, 0xf9, 0x55, 0x30, 0x27, 0xd7,
  0xdd, 0x9f, 0xd2, 0x4c, 0xec, 0x5f, 0x4a, 0x89, 0x0a, 0xe1, 0x80, 0x11,
  0x7c, 0x2a, 0x43, 0xd0, 0x0c, 0x90, 0x56, 0xb1, 0x55, 0xf5, 0x0f, 0x5a,
  0xc6, 0x56, 0x06, 0x53, 0x59, 0xdd, 0x93, 0x53, 0xb5, 0xe9, 0x03, 0xaa,
  0xc0, 0x11, 0x42, 0xd8, 0x50, 0xea, 0xea, 0xc9, 0x3b, 0xa1, 0x5f, 0x8d,
  0x45, 0x16, 0x96, 0xb0, 0x3e, 0x53, 0xb7, 0x0a, 0x4f, 0x55, 0x84, 0x99,
  0xb6, 0xb3, 0x41, 0xad, 0xfe, 0x50, 0x2e, 0x11, 0x14, 0x63, 0x7e, 0x6b,
  0x90, 0x21, 0x74, 0x75, 0xa7, 0x96, 0x81, 0xd1, 0x4b, 0x34, 0x89, 0xb4,
  0x41, 0xe1, 0x4b, 0xcc, 0x5e, 0xe5, 0x7e, 0x4b, 0x67, 0xd0, 0x61, 0x20,
  0x01, 0x02, 0x81, 0x80, 0x00, 0x86, 0x73, 0xf1, 0x51, 0xce, 0x85, 0x6c,
  0x26, 0xdc, 0xf9, 0xc5, 0x09, 0x5f, 0xc6, 0x01, 0xdf, 0x6c, 0x82, 0x14,
  0xea, 0x59, 0x83, 0xe0, 0x1a, 0x14, 0x15, 0x31, 0x63, 0x46, 0x1f, 0x76,
  0xdc, 0xe0, 0xb2, 0x15, 0x4b, 0x3a, 0xc0, 0x10, 0xab, 0x00, 0x4f, 0xb7,
  0x76, 0x74, 0xe3, 0x99, 0xd5, 0x65, 0x0b, 0x32, 0x41, 0x36, 0x47, 0x97,
  0x64, 0xfc, 0x05, 0xef, 0x6a, 0xdb, 0x8a, 0x2e, 0x5d, 0xcc, 0x94, 0xb9,
  0xb2, 0x46, 0x82, 0xf9, 0x79, 0x86, 0x81, 0x1a, 0x70, 0x51, 0x17, 0xc5,
  0x2b, 0xa5, 0x9a, 0x34, 0x4f, 0x48, 0x4f, 0x87, 0x40, 0x38, 0x3e, 0x8f,
  0x28, 0x13, 0x83, 0x5d, 0x85, 0x2a, 0x84, 0x8f, 0x0d, 0xd1, 0xb1, 0x0a,
  0x55, 0x88, 0x11, 0xa9, 0xe2, 0x52, 0x8c, 0xad, 0x94, 0xd9, 0x41, 0x32,
  0x9c, 0x15, 0x30, 0xf8, 0x33, 0xc1, 0xd9, 0xca, 0xbd, 0xb6, 0xdf, 0xb9
};
unsigned int private_der_len = 1188;

unsigned char cert_der[] = {
  0x30, 0x82, 0x03, 0x59, 0x30, 0x82, 0x02, 0x41, 0xa0, 0x03, 0x02, 0x01,
  0x02, 0x02, 0x14, 0x78, 0xf0, 0x19, 0xf6, 0x78, 0x35, 0xa5, 0xc5, 0xf3,
  0xc2, 0x6d, 0x90, 0x45, 0xc0, 0x8f, 0x11, 0xdd, 0x06, 0xdf, 0xc4, 0x30,
  0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b,
  0x05, 0x00, 0x30, 0x4d, 0x31, 0x4b, 0x30, 0x49, 0x06, 0x03, 0x55, 0x04,
  0x0b, 0x0c, 0x42, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x20, 0x57, 0x65,
  0x62, 0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x20, 0x4f,
  0x3d, 0x41, 0x6d, 0x61, 0x7a, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x20,
  0x49, 0x6e, 0x63, 0x2e, 0x20, 0x4c, 0x3d, 0x53, 0x65, 0x61, 0x74, 0x74,
  0x6c, 0x65, 0x20, 0x53, 0x54, 0x3d, 0x57, 0x61, 0x73, 0x68, 0x69, 0x6e,
  0x67, 0x74, 0x6f, 0x6e, 0x20, 0x43, 0x3d, 0x55, 0x53, 0x30, 0x1e, 0x17,
  0x0d, 0x31, 0x39, 0x31, 0x32, 0x31, 0x31, 0x32, 0x31, 0x30, 0x32, 0x32,
  0x32, 0x5a, 0x17, 0x0d, 0x34, 0x39, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33,
  0x35, 0x39, 0x35, 0x39, 0x5a, 0x30, 0x1e, 0x31, 0x1c, 0x30, 0x1a, 0x06,
  0x03, 0x55, 0x04, 0x03, 0x0c, 0x13, 0x41, 0x57, 0x53, 0x20, 0x49, 0x6f,
  0x54, 0x20, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
  0x65, 0x30, 0x82, 0x01, 0x22, 0x30, 0x0d, 0x06, 0x09, 0x2a, 0x86, 0x48,
  0x86, 0xf7, 0x0d, 0x01, 0x01, 0x01, 0x05, 0x00, 0x03, 0x82, 0x01, 0x0f,
  0x00, 0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01, 0x00, 0xd9, 0x3c,
  0x37, 0xbd, 0xc7, 0xba, 0xf5, 0x28, 0xc5, 0xac, 0x65, 0xc6, 0x89, 0xba,
  0x10, 0x0b, 0xa0, 0x04, 0xd1, 0x96, 0x7c, 0xc6, 0x56, 0xa2, 0x61, 0xa6,
  0xe5, 0xe3, 0x24, 0x3c, 0x2f, 0xa3, 0xf6, 0xc3, 0xca, 0xb2, 0xfe, 0x1c,
  0x98, 0xdc, 0xa8, 0x6d, 0x9d, 0x8e, 0x27, 0x19, 0xe5, 0x5a, 0x95, 0xe2,
  0x78, 0xa5, 0x42, 0xc5, 0xa6, 0x2d, 0x17, 0x56, 0x4a, 0xa6, 0x75, 0x9f,
  0xdf, 0x84, 0xb2, 0x8c, 0x72, 0x0c, 0x17, 0x49, 0x57, 0x6a, 0x23, 0xa1,
  0x2c, 0x8a, 0xde, 0xf0, 0xac, 0x51, 0xaf, 0xaa, 0x0f, 0x73, 0xf5, 0x63,
  0x78, 0x5f, 0x12, 0x6e, 0xbd, 0x40, 0x55, 0x71, 0x04, 0x43, 0x3b, 0x73,
  0xa1, 0xe0, 0x6e, 0x1f, 0x78, 0x5b, 0xc5, 0xa2, 0x12, 0xc6, 0x2b, 0xd3,
  0x0d, 0xad, 0x8c, 0x11, 0x5d, 0x3d, 0x1b, 0xd7, 0xc6, 0xe2, 0x05, 0x2e,
  0x1c, 0x9f, 0xf1, 0xb4, 0x4e, 0x54, 0xf2, 0xe8, 0xac, 0xc4, 0x4e, 0xfa,
  0xc3, 0x07, 0x9a, 0x4c, 0x38, 0xfd, 0xfe, 0xc2, 0xef, 0xab, 0x10, 0xd0,
  0x59, 0x68, 0x36, 0x15, 0x1e, 0x1e, 0x0d, 0xac, 0xe3, 0x6a, 0x8a, 0x30,
  0xaa, 0x5e, 0x10, 0xe8, 0xc5, 0xeb, 0xa9, 0x75, 0x7f, 0xca, 0x31, 0x6b,
  0xfc, 0xd9, 0x52, 0xa2, 0x40, 0x37, 0x0a, 0xa5, 0x8a, 0xc2, 0x35, 0x0d,
  0x60, 0x43, 0x44, 0xe6, 0x25, 0x9e, 0xa6, 0x77, 0xbe, 0x53, 0x52, 0x03,
  0x97, 0x1f, 0xb2, 0x85, 0xbc, 0x48, 0x1b, 0x55, 0x70, 0x47, 0xbd, 0x61,
  0xe2, 0xb5, 0x20, 0xb2, 0xe2, 0xe2, 0x2d, 0xb6, 0xf1, 0x8d, 0xb3, 0xab,
  0x9c, 0xd9, 0xd2, 0x8c, 0x6e, 0x2d, 0x14, 0x10, 0x62, 0x4d, 0xec, 0x2a,
  0x6f, 0xa8, 0x11, 0x02, 0xc4, 0xf2, 0x42, 0xdb, 0xca, 0x45, 0x85, 0xac,
  0x4a, 0xa6, 0xba, 0x4d, 0x50, 0x6d, 0xe9, 0x34, 0x4b, 0x60, 0x38, 0x6f,
  0x31, 0x83, 0x02, 0x03, 0x01, 0x00, 0x01, 0xa3, 0x60, 0x30, 0x5e, 0x30,
  0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23, 0x04, 0x18, 0x30, 0x16, 0x80, 0x14,
  0x5a, 0xce, 0xfc, 0xf3, 0x4d, 0xff, 0x24, 0xb7, 0x80, 0x35, 0x74, 0x0c,
  0x9f, 0x6e, 0x26, 0x0c, 0x84, 0xc5, 0x5e, 0x5a, 0x30, 0x1d, 0x06, 0x03,
  0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x7b, 0x6f, 0xfd, 0x25, 0x11,
  0xed, 0xb8, 0x2d, 0x21, 0x60, 0x34, 0xf1, 0x0a, 0x64, 0x78, 0x6a, 0x10,
  0xd5, 0x99, 0x87, 0x30, 0x0c, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01,
  0xff, 0x04, 0x02, 0x30, 0x00, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x1d, 0x0f,
  0x01, 0x01, 0xff, 0x04, 0x04, 0x03, 0x02, 0x07, 0x80, 0x30, 0x0d, 0x06,
  0x09, 0x2a, 0x86, 0x48, 0x86, 0xf7, 0x0d, 0x01, 0x01, 0x0b, 0x05, 0x00,
  0x03, 0x82, 0x01, 0x01, 0x00, 0x12, 0x90, 0x4d, 0x5f, 0xd0, 0x3d, 0xb6,
  0xcc, 0x9e, 0x92, 0xd1, 0x46, 0x3a, 0x58, 0x7f, 0x3f, 0x71, 0x46, 0xe4,
  0x8a, 0x6e, 0x8a, 0x07, 0xde, 0x18, 0x0c, 0xb2, 0xe5, 0xcb, 0xd6, 0x61,
  0xe8, 0xe9, 0x04, 0x03, 0xa4, 0x54, 0x8a, 0x53, 0x28, 0x04, 0x25, 0xa0,
  0x3b, 0x07, 0xe6, 0x7e, 0xbc, 0x53, 0x25, 0xd5, 0x56, 0x9d, 0x0c, 0x06,
  0x84, 0xa4, 0xbe, 0xee, 0xcc, 0x18, 0xc8, 0x35, 0x30, 0xd2, 0x54, 0x05,
  0x7e, 0x2b, 0x6f, 0xce, 0xe3, 0xf9, 0x40, 0x15, 0xb6, 0xec, 0x6c, 0x22,
  0xed, 0xbf, 0x32, 0xfe, 0x9d, 0x2c, 0x63, 0x48, 0xd9, 0xc9, 0xdf, 0xa7,
  0x99, 0x76, 0xeb, 0xa3, 0x5a, 0x56, 0x87, 0xc8, 0x1a, 0x56, 0xd9, 0xaf,
  0xc5, 0x5f, 0xe2, 0xa3, 0x95, 0xaa, 0xd2, 0x1e, 0x32, 0x58, 0xb2, 0xe8,
  0x04, 0x10, 0x55, 0x8c, 0xc8, 0x24, 0xc9, 0x5a, 0xd9, 0xa9, 0x10, 0xdc,
  0xc9, 0x57, 0x46, 0xfd, 0x6f, 0xa5, 0x1c, 0x1e, 0x30, 0xe8, 0x54, 0x34,
  0xe1, 0xc9, 0x10, 0x2b, 0x74, 0xc1, 0x72, 0xaf, 0x2b, 0xf6, 0xce, 0x91,
  0xd3, 0x05, 0x4c, 0x4f, 0x9c, 0xc5, 0x98, 0x2d, 0x5f, 0x17, 0x29, 0x84,
  0x0b, 0x38, 0x27, 0x22, 0x37, 0x8e, 0x08, 0x2a, 0xaa, 0x56, 0xbf, 0x7a,
  0x28, 0x4b, 0x8e, 0xb2, 0xe2, 0x8f, 0x36, 0x65, 0x41, 0x6a, 0x59, 0xfd,
  0xab, 0x60, 0x1a, 0xb6, 0x86, 0x2e, 0x6a, 0x4e, 0x54, 0x9b, 0x4d, 0x91,
  0x54, 0xb8, 0xbe, 0xc4, 0xf6, 0x07, 0x55, 0x23, 0x76, 0xe0, 0xa9, 0x61,
  0x22, 0xcb, 0xc1, 0xf4, 0xed, 0x4d, 0x9c, 0x9f, 0xa2, 0xfd, 0x29, 0x6b,
  0x00, 0xc7, 0x9e, 0xab, 0x73, 0x12, 0x68, 0x61, 0x5f, 0xbd, 0x45, 0xa4,
  0xa0, 0x35, 0x20, 0x16, 0xe7, 0x76, 0xc7, 0x61, 0x4c, 0xe9, 0x70, 0xce,
  0x80, 0x8c, 0xd2, 0x7e, 0xb1, 0xdd, 0x29, 0xfe, 0x7b
};
unsigned int cert_der_len = 861;

const char* ssid = "LABO14";
const char* password = "catolica14";
const char* mqtt_server = "a3qi15dj1wl62m-ats.iot.us-east-2.amazonaws.com";

WiFiClientSecure wifiClient;
PubSubClient mqttClient(wifiClient);
long lastMsg = 0;
char msg[50];
int value = 0;

void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  for (int i = 0; i < length; i++)
    Serial.print((char)payload[i]);

  Serial.println();
}

void reconnect() {
  // Loop until we're reconnected
  while (!mqttClient.connected()) {
    Serial.print("Attempting MQTT connection...");
    // Create a random client ID
    String clientId = "ESP8266Client-";
    clientId += String(random(0xffff), HEX);
    // Attempt to connect
    if (mqttClient.connect(clientId.c_str())) {
      Serial.println("connected");
      mqttClient.subscribe("inTopic");
    } else {
      Serial.print("failed, rc=");
      Serial.print(mqttClient.state());
      Serial.println(" try again in 5 seconds");
      // Wait 5 seconds before retrying
      delay(5000);
    }
  }
}

void setup_wifi() {
  delay(10);
  // We start by connecting to a WiFi network
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  randomSeed(micros());

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}

void setup_wifiClient() {
  wifiClient.setCertificate(cert_der, cert_der_len);
  wifiClient.setPrivateKey(private_der, private_der_len);
  wifiClient.setCACert(ca_der, ca_der_len);
}

void setup_mqttClient() {
  mqttClient.setServer(mqtt_server, 8883);
  mqttClient.setCallback(callback);  
}

void setup() {
  Serial.begin (115200);
  
  setup_wifi();

  setup_wifiClient();

  setup_mqttClient();
}

void loop() {
  
  if (!mqttClient.connected()) {
    reconnect();
  }
  mqttClient.loop();

  long now = millis();
  if (now - lastMsg > 10000) {
    lastMsg = now;
    ++value;
    snprintf (msg, 75, "hello world #%ld", value);
    Serial.print("Publish message: ");
    Serial.println(msg);
    mqttClient.publish("outTopic", msg);
  }
}
